diff --git a/apps/CMakeLists.txt b/apps/CMakeLists.txt
index 8dd8845f3..c4b7e3754 100644
--- a/apps/CMakeLists.txt
+++ b/apps/CMakeLists.txt
@@ -3,7 +3,7 @@
 #
 # (based originally on the libLAS files copyright Mateusz Loskot)
 
-cmake_minimum_required(VERSION 2.8)
+cmake_minimum_required(VERSION 3.5)
 
 #------------------------------------------------------------------------------
 # Configure build targets
diff --git a/cmake/dimension.cmake b/cmake/dimension.cmake
index ebb7222d4..7ac446839 100644
--- a/cmake/dimension.cmake
+++ b/cmake/dimension.cmake
@@ -4,7 +4,16 @@
 
 set(DIMENSION_INFILE ${PDAL_SRC_DIR}/Dimension.json)
 set(DIMENSION_OUTFILE ${CMAKE_CURRENT_BINARY_DIR}/include/pdal/Dimension.hpp)
+
+IF (CMAKE_CROSSCOMPILING)
+    SET(DIMBUILDER "${DIMBUILDER_EXECUTABLE}")
+ELSE (CMAKE_CROSSCOMPILING)
+    SET(DIMBUILDER dimbuilder)
+ENDIF (CMAKE_CROSSCOMPILING)
+
+MESSAGE(INFO "DIMBUILDER location: ${DIMBUILDER}" )
+
 add_custom_command(OUTPUT ${DIMENSION_OUTFILE}
-    COMMAND dimbuilder ${DIMENSION_INFILE} ${DIMENSION_OUTFILE}
+    COMMAND ${DIMBUILDER} ${DIMENSION_INFILE} ${DIMENSION_OUTFILE}
         DEPENDS ${DIMENSION_INFILE} dimbuilder)
 add_custom_target(generate_dimension_hpp DEPENDS ${DIMENSION_OUTFILE})
diff --git a/cmake/modules/FindPostgreSQL.cmake b/cmake/modules/FindPostgreSQL.cmake
index 8178418cc..ee7b2fd3c 100644
--- a/cmake/modules/FindPostgreSQL.cmake
+++ b/cmake/modules/FindPostgreSQL.cmake
@@ -31,13 +31,16 @@ if(PG_CONFIG)
 
   exec_program(${PG_CONFIG}
     ARGS "--includedir"
-    OUTPUT_VARIABLE PG_CONFIG_INCLUDEDIR)  
+    OUTPUT_VARIABLE PG_CONFIG_INCLUDEDIR)
 
   exec_program(${PG_CONFIG}
     ARGS "--libdir"
     OUTPUT_VARIABLE PG_CONFIG_LIBDIR)
 else()
-  set(POSTGRESQL_VERSION "unknown")
+
+    set(PG_CONFIG_LIBDIR "${PREFIX}/lib")
+    set(PG_CONFIG_INCLUDEDIR "${PREFIX}/include")
+    set(POSTGRESQL_VERSION "13.3")
 endif()
 
 find_path(POSTGRESQL_INCLUDE_DIR libpq-fe.h
@@ -53,7 +56,7 @@ find_path(POSTGRESQL_INCLUDE_DIR libpq-fe.h
 
 find_library(POSTGRESQL_LIBRARIES NAMES pq libpq
   PATHS
-  ${PG_CONFIG_LIBDIR}  
+  ${PG_CONFIG_LIBDIR}
   /usr/lib
   /usr/local/lib
   /usr/lib/postgresql
@@ -73,6 +76,15 @@ endif()
 
 # Handle the QUIETLY and REQUIRED arguments and set POSTGRESQL_FOUND to TRUE
 # if all listed variables are TRUE
+
+
+if ("$ENV{CONDA_BUILD_CROSS_COMPILATION}" EQUAL "1")
+
+    set(PG_CONFIG_LIBDIR "${PREFIX}/lib")
+    set(PG_CONFIG_INCLUDEDIR "${PREFIX}/include")
+    set(POSTGRESQL_VERSION "13.3")
+endif()
+
 include(FindPackageHandleStandardArgs)
 find_package_handle_standard_args(PostgreSQL
   DEFAULT_MSG
diff --git a/dimbuilder/CMakeLists.txt b/dimbuilder/CMakeLists.txt
index 09d334f1f..9aa9742f6 100644
--- a/dimbuilder/CMakeLists.txt
+++ b/dimbuilder/CMakeLists.txt
@@ -2,7 +2,7 @@
 # The seemingly strange arrangement of this cmake file allows you to build
 # this application as a standalone.
 #
-cmake_minimum_required(VERSION 2.8.6)
+cmake_minimum_required(VERSION 3.5)
 
 set(MAKE_COLOR_MAKEFILE ON)
 
diff --git a/scripts/conda/osx.sh b/scripts/conda/osx.sh
index 5c6badde0..b08342820 100755
--- a/scripts/conda/osx.sh
+++ b/scripts/conda/osx.sh
@@ -23,18 +23,13 @@ CFLAGS= CXXFLAGS= CC=/usr/bin/cc CXX=/usr/bin/c++ cmake   -G "$CONFIG"  \
         -DBUILD_PLUGIN_HDF=ON \
         -DBUILD_PLUGIN_ICEBRIDGE=ON \
         -DBUILD_PLUGIN_TILEDB=ON \
-        -DBUILD_PLUGIN_RDBLIB=ON \
-        -Drdb_DIR=/Users/hobu/dev/release/riegl/rdblib-2.2.3-x86_64-darwin/interface/cpp/ \
         -DWITH_LAZPERF=ON \
         -DWITH_ZSTD=ON \
-        -DWITH_LASZIP=ON \
-        -DWITH_DRACO=ON \
+        -DWITH_LASZIP=OFF \
+        -DBUILD_PLUGIN_DRACO=ON \
         ..
 
 
-# if ! [ -z "Unix Makefiles" ]; then
-#     make -j 4
-# fi
 
 if ! [ -z "Ninja" ]; then
     ninja
diff --git a/tools/lasdump/CMakeLists.txt b/tools/lasdump/CMakeLists.txt
index 8083a228d..767d642e7 100644
--- a/tools/lasdump/CMakeLists.txt
+++ b/tools/lasdump/CMakeLists.txt
@@ -2,7 +2,7 @@
 # The seemingly strange arrangement of this cmake file allows you to build
 # lasdump as a standalone.
 #
-cmake_minimum_required(VERSION 2.8.6)
+cmake_minimum_required(VERSION 3.5)
 
 set(MAKE_COLOR_MAKEFILE ON)
 
